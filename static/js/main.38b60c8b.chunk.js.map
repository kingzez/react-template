{"version":3,"sources":["assets/wave-light.png","containers/Login/index.tsx","constants/user.action.ts","serviceWorker.ts","containers/Layout/NavBar.tsx","actions/sidebar.ts","components/loading/index.tsx","routes/index.tsx","containers/Layout/Logo.tsx","containers/Layout/SideBar.tsx","containers/Layout/Content.tsx","containers/Layout/index.tsx","containers/Main/index.tsx","index.tsx","reducers/counter.ts","reducers/sidebar.ts","reducers/user.ts","reducers/index.ts","configureStore.ts","containers/Layout/Layout.module.scss","containers/Login/Login.module.scss","apis/request.ts","actions/user.ts","apis/index.ts"],"names":["module","exports","Login","dispatch","useDispatch","className","style","login","card","header","body","name","initialValues","remember","onFinish","values","console","log","userAction","onFinishFailed","errorInfo","Item","rules","required","message","prefix","placeholder","Password","type","block","htmlType","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT","Boolean","window","location","hostname","match","Header","connect","state","collapsed","toggle","close","props","userState","useSelector","user","username","menu","width","onClick","key","info","UserOutlined","LogoutOutlined","styles","background","padding","boxShadow","trigger","MenuUnfoldOutlined","MenuFoldOutlined","headerRight","size","icon","overlay","Loading","Home","lazy","Counter","NoMatch","routeList","title","path","exact","component","children","routes","fallback","map","route","length","subRoute","RouteWithSubRoutes","Logo","logo","src","LogoLight","alt","Sider","SubMenu","collapsible","theme","mode","defaultSelectedKeys","item","subItem","to","Content","RootContent","margin","minHeight","Root","height","Main","isAuthed","Layout","ReactDOM","render","store","history","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","counterReducer","action","sidebarReducer","initState","localStorage","getItem","JSON","parse","token","userReducer","constants","setItem","stringify","sessionID","removeItem","rootReducer","combineReducers","router","connectRouter","count","createBrowserHistory","preloadedState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","routerMiddleware","thunkMiddleware","configureStore","service","axios","create","baseURL","process","withCredentials","timeout","interceptors","request","use","config","error","Promise","reject","response","status","push","data","msg","password","method","url","res","success","catch","err","logout"],"mappings":"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","file":"static/js/main.38b60c8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wave-light.c858e3c9.png\";","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Form, Input, Button } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport * as userAction from 'actions/user'\nimport style from './Login.module.scss'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n\n  const onFinish = (values: any) => {\n    console.log('Success:', values)\n    dispatch(userAction.login(values))\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div className={style.login}>\n      <div className={style.card}>\n        <div className={style.header}>\n          <span>欢迎登录</span>\n        </div>\n        <div className={style.body}>\n          <Form\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}>\n            <Form.Item\n              name=\"username\"\n              rules={[{ required: true, message: '请输入用户名!' }]}>\n              <Input prefix={<UserOutlined />} placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: '请输入密码!' }]}>\n              <Input.Password\n                prefix={<LockOutlined />}\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" block htmlType=\"submit\">\n                登录\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","export default {\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  LOGOUT: 'LOGOUT',\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { Dispatch } from 'redux'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport { Layout, Avatar, Menu, Dropdown, message } from 'antd'\nimport {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  UserOutlined,\n  LogoutOutlined,\n} from '@ant-design/icons'\nimport { ApplicationState } from 'reducers'\nimport { toggle, close } from 'actions/sidebar'\nimport * as userAction from 'actions/user'\nimport styles from './Layout.module.scss'\n\ninterface StateProps {\n  collapsed: boolean\n}\n\ninterface DispatchProps {\n  close: () => void\n  toggle: () => void\n}\n\nconst { Header } = Layout\n\nconst NavBar = (props: StateProps & DispatchProps) => {\n  const dispatch = useDispatch()\n  const userState = useSelector((state: any) => state.user)\n  const { username } = userState.user\n  console.log(userState)\n\n  const menuClick = ({ key }: { key: string }) => {\n    if (key === 'logout') {\n      dispatch(userAction.logout())\n    }\n    if (key === 'person') {\n      message.info(`todo go ${key}`)\n    }\n  }\n\n  const menu = (\n    <Menu style={{ width: 120 }} onClick={menuClick}>\n      <Menu.Item key=\"person\">\n        <UserOutlined />\n        个人中心\n      </Menu.Item>\n      <Menu.Item key=\"logout\">\n        <LogoutOutlined />\n        退出登录\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <Header\n      className={styles.header}\n      style={{\n        background: '#fff',\n        padding: 0,\n        boxShadow: '0 1px 4px rgba(0, 21, 41, 0.08)',\n      }}>\n      <div\n        className={styles.trigger}\n        onClick={props.collapsed ? props.close : props.toggle}>\n        {props.collapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n      </div>\n      <div className={styles.headerRight}>\n        <Avatar size=\"small\" icon={<UserOutlined />} />\n        <Dropdown overlay={menu}>\n          <span className={styles.username}>{username}</span>\n        </Dropdown>\n      </div>\n    </Header>\n  )\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  collapsed: state.collapsed,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  toggle: () => dispatch(toggle()),\n  close: () => dispatch(close()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)\n","export const toggle = () => ({\n  type: 'TOGGLE_SIDEBAR'\n})\n\nexport const close = () => ({\n  type: 'CLOSE_SIDEBAR'\n})\n","import React from 'react'\n\nconst Loading = () => <div>Loading...</div>\n\nexport default Loading\n","import React, { lazy, Suspense } from 'react'\nimport { Route, Switch, RouteProps } from 'react-router'\nimport Loading from 'components/loading'\n\nconst Home = lazy(() => import('containers/Home'))\nconst Login = lazy(() => import('containers/Login/index'))\nconst Counter = lazy(() => import('containers/Counter'))\nconst NoMatch = lazy(() => import('containers/NoMatch'))\n\ninterface RouteEle extends RouteProps {\n  icon?: string\n  title: string\n  children?: RouteEle[]\n  path: string\n}\n\nexport const routeList: RouteEle[] = [\n  {\n    icon: 'home',\n    title: 'Home',\n    path: '/',\n    exact: true,\n    component: Home,\n  },\n  {\n    icon: 'smile',\n    title: 'Nest',\n    path: '/nest',\n    exact: false,\n    children: [\n      {\n        icon: 'user-add',\n        title: 'One',\n        path: '/nest/one',\n        exact: true,\n        component: () => <div>One</div>,\n      },\n      {\n        icon: 'usergroup-add',\n        title: 'Two',\n        path: '/nest/two',\n        exact: true,\n        component: () => <div>Two</div>,\n      },\n    ],\n  },\n  {\n    icon: 'calculator',\n    title: 'Counter',\n    path: '/counter',\n    exact: true,\n    component: Counter,\n  },\n  {\n    icon: 'code',\n    title: 'Login',\n    path: '/login',\n    exact: true,\n    component: Login,\n  },\n]\n\n// TODO：not good, just support level two\nfunction RouteWithSubRoutes(route: RouteEle) {\n  return (\n    <Route\n      key={route.path}\n      exact={route.exact}\n      path={route.path}\n      component={route.component}>\n      {route.children && route.children.length > 0\n        ? route.children.map((subRoute: RouteEle) => (\n            <Route\n              key={subRoute.path}\n              exact={subRoute.exact}\n              path={subRoute.path}\n              component={subRoute.component}\n            />\n          ))\n        : null}\n    </Route>\n  )\n}\n\nconst routes = (\n  <Suspense fallback={<Loading />}>\n    <Switch>\n      {routeList.map((route) => RouteWithSubRoutes(route))}\n      <Route component={NoMatch} />\n    </Switch>\n  </Suspense>\n)\n\nexport default routes\n","import React from 'react'\nimport LogoLight from 'assets/wave-light.png'\nimport styles from './Layout.module.scss'\n\nconst Logo = () => (\n  <div className={styles.logo}>\n    <img src={LogoLight} alt=\"logo\" />\n    <h1>React Admin</h1>\n  </div>\n)\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Layout, Menu } from 'antd'\nimport { Icon } from '@ant-design/compatible'\nimport { routeList } from 'routes'\nimport { ApplicationState } from 'reducers'\nimport Logo from './Logo'\n\ninterface StateProps {\n  collapsed: boolean\n}\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nconst SideBar = (props: StateProps) => (\n  <Sider trigger={null} collapsible collapsed={props.collapsed} width=\"240\">\n    <Logo />\n    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['/']}>\n      {routeList.map((item) =>\n        item.children && item.children.length > 0 ? (\n          <SubMenu\n            key={item.path}\n            title={\n              <span>\n                <Icon type={item.icon} />\n                <span>{item.title}</span>\n              </span>\n            }>\n            {item.children.map((subItem) => (\n              <Menu.Item key={subItem.path}>\n                <Icon type={subItem.icon} />\n                <span>{subItem.title}</span>\n                <Link to={subItem.path} />\n              </Menu.Item>\n            ))}\n          </SubMenu>\n        ) : (\n          <Menu.Item key={item.path}>\n            <Icon type={item.icon} />\n            <span>{item.title}</span>\n            <Link to={item.path} />\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  </Sider>\n)\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  collapsed: state.collapsed,\n})\n\nexport default connect(mapStateToProps)(SideBar)\n","import React from 'react'\nimport { Layout } from 'antd'\nimport routes from 'routes'\n\nconst { Content } = Layout\n\nconst RootContent = () => (\n  <Content\n    style={{\n      margin: '24px 16px',\n      padding: 24,\n      background: '#fff',\n      minHeight: 280\n    }}>\n    {routes}\n  </Content>\n)\n\nexport default RootContent\n","import React from 'react'\nimport { Layout } from 'antd'\nimport NavBar from './NavBar'\nimport SideBar from './SideBar'\nimport Content from './Content'\n\nconst Root = () => (\n  <Layout style={{ height: '100%' }}>\n    <SideBar />\n    <Layout>\n      <NavBar />\n      <Content />\n    </Layout>\n  </Layout>\n)\n\nexport default Root\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Layout from 'containers/Layout'\nimport Login from 'containers/Login'\n\nconst Main = () => {\n  const isAuthed = useSelector((state: any) => state.user.isAuthed)\n  console.log('isAuthed', isAuthed)\n\n  return isAuthed ? <Layout /> : <Login />\n}\n\nexport default Main\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './configureStore'\nimport * as serviceWorker from './serviceWorker'\nimport Main from './containers/Main'\nimport './index.less'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Main />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { Action } from 'redux'\n\nconst counterReducer = (state: number = 0, action: Action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\nexport default counterReducer","import { Action } from 'redux'\n\nconst sidebarReducer = (state: boolean = false, action: Action) => {\n  switch (action.type) {\n    case 'TOGGLE_SIDEBAR':\n      return true\n    case 'CLOSE_SIDEBAR':\n      return false\n    default:\n      return state\n  }\n}\n\nexport default sidebarReducer\n","import constants from 'constants/user.action'\n\nconst initState = {\n  isAuthed: !!localStorage.getItem('token'),\n  user: JSON.parse(localStorage.getItem('user') || '{}'),\n  token: localStorage.getItem('token') || '',\n}\n\nconst userReducer = (state = initState, action: any) => {\n  switch (action.type) {\n    case constants.LOGIN_REQUEST:\n      return { ...state }\n    case constants.LOGIN_SUCCESS:\n      localStorage.setItem('user', JSON.stringify(action.user))\n      localStorage.setItem('token', action.user.sessionID)\n      return {\n        ...state,\n        isAuthed: true,\n        user: action.user,\n        token: action.user.sessionID,\n      }\n    case constants.LOGOUT:\n      localStorage.removeItem('user')\n      localStorage.removeItem('token')\n      return { ...state, isAuthed: false, user: {}, token: '' }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n\n// https://api.github.com/users/kingzez\n","import { combineReducers } from 'redux'\nimport { History } from 'history'\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport counterReducer from './counter'\nimport sidebarReducer from './sidebar'\nimport userReducer from './user'\n\nconst rootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    count: counterReducer,\n    user: userReducer,\n    collapsed: sidebarReducer,\n    // rest of reducers\n  })\n\nexport interface ApplicationState {\n  router: RouterState\n  count: number\n  collapsed: boolean\n}\n\nexport default rootReducer\n","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n// import createSagaMiddleware from 'redux-saga'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from './reducers'\n// import rootSagas from './sagas'\n\nexport const history = createBrowserHistory()\n\nfunction configureStore(preloadedState?: any) {\n  const composeEnhancer: typeof compose =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  // const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer(history), // root reducer with router state\n    preloadedState,\n    composeEnhancer(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        // sagaMiddleware\n        thunkMiddleware\n        // ... other middlewares ...\n      )\n    )\n  )\n  // sagaMiddleware.run(rootSagas)\n\n  return store\n}\n\nconst store = configureStore()\nexport default store\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Layout_header__3S-SH\",\"trigger\":\"Layout_trigger__vrsS-\",\"headerRight\":\"Layout_headerRight__3wP_Q\",\"username\":\"Layout_username__3km3e\",\"logo\":\"Layout_logo__2dphr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1b68E\",\"card\":\"Login_card__2oTQl\",\"header\":\"Login_header__2ABuJ\",\"body\":\"Login_body__1FwTx\"};","import axios from 'axios'\nimport { history } from 'configureStore'\nimport { message } from 'antd'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_API_URL, // url = base url + request url\n  withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000, // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  (config) => {\n    // Do something before request is sent\n    return config\n  },\n  (error) => {\n    // Do something with request error\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  (response) => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    // console.log(response)\n    return response\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      // window.location.href = '/login'\n      history.push('/login')\n    }\n    console.log(error.response)\n    if (error.response.status === 403) {\n      return message.error(error.response.data.msg)\n    }\n\n    message.error(error.message)\n    console.error(`Error: ${error}`)\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n","import { Dispatch } from 'redux'\nimport constants from 'constants/user.action'\nimport * as Api from 'apis'\nimport { history } from 'configureStore'\n\nexport const login = ({\n  username,\n  password,\n}: {\n  username: string\n  password: string\n}) => {\n  return (dispatch: Dispatch) => {\n    dispatch(request({}))\n\n    Api.login({ username, password })\n      .then((res) => {\n        dispatch(success(res.data))\n        history.push('/')\n      })\n      .catch((err) => {\n        dispatch(failure(err))\n      })\n  }\n  function request(user: any) {\n    return { type: constants.LOGIN_REQUEST, user }\n  }\n  function success(user: any) {\n    return { type: constants.LOGIN_SUCCESS, user }\n  }\n  function failure(error: any) {\n    return { type: constants.LOGIN_FAILURE, error }\n  }\n}\n\nexport const logout = () => ({ type: constants.LOGOUT })\n","import request from 'apis/request'\n\n/**\n * 登录\n * @param data\n */\ninterface LoginData {\n  username: string\n  password: string\n}\nexport function login(data: LoginData) {\n  return request({\n    method: 'POST',\n    url: '/api/user/login',\n    data,\n  })\n}\n\nexport function logout() {\n  return request({\n    method: 'POST',\n    url: '/api/logout',\n  })\n}\n"],"sourceRoot":""}